{"ast":null,"code":"var _jsxFileName = \"C:\\\\Personal Projects\\\\react-blackjack-hooks\\\\src\\\\components\\\\playfield\\\\playfield.jsx\";\nimport React from 'react';\nimport GetCard from '../../helper/getCard';\nimport CheckValue from '../../helper/checkValue';\nimport CheckVictor from '../../helper/checkVictor';\nimport CheckPlayer from '../../helper/checkPlayer';\nimport './playfield.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Playfield = props => {\n  const onNewGame = () => {\n    if (props.bank < 1 && props.firstName !== 'josh') {\n      window.location.href = 'https://www.youtube.com/watch?v=dQw4w9WgXcQ';\n    }\n\n    if (props.bank < 1 && props.firstName === 'josh') {\n      alert('Game Over!');\n    }\n\n    props.setDealerValue(0);\n    props.setDealerHand([]);\n    props.setPlayerValue(0);\n    props.setPlayerHand([]);\n    props.setBid(0);\n    props.setCurrentBid(0);\n    props.setActive(true);\n    props.setSubmitted(false);\n  };\n\n  const dealerDraw = async () => {\n    let res = await GetCard(props.deckID);\n    let code = await res.data.cards[0].code;\n    let val = await CheckValue(res.data.cards[0].value, props.dealerValue);\n    props.setDealerHand([...props.dealerHand, code]);\n    props.setDealerValue(props.dealerValue + val);\n  };\n\n  const dealerTurn = async () => {\n    if (props.playerValue > 21) {\n      CheckVictor(props.playerValue, props.dealerValue);\n    }\n\n    if (props.playerValue > props.dealerValue) {\n      dealerDraw();\n      setTimeout(() => {\n        if (props.dealerValue > props.playerValue) {\n          let winner = CheckVictor(props.playerValue, props.dealerValue);\n\n          if (winner === 'player') {\n            props.setBank(props.bank + 2 * props.currentBid);\n          }\n        }\n\n        dealerTurn();\n      }, 1000);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"playfield\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dealer__value\",\n      children: props.dealerValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bidding\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bidding__bank\",\n        children: [\"BANK: \", props.bank]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => {\n          if (props.bank - e.target.value >= 0 && e.target.value > 0) {\n            props.setBid(e.target.value);\n          }\n        },\n        className: props.submitted ? 'hidden' : 'bidding__input',\n        type: \"number\",\n        value: props.bid,\n        min: \"0\",\n        max: props.bank\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: async () => {\n          props.setCurrentBid(props.bid);\n          props.setBank(props.bank - props.bid);\n          dealerDraw();\n          props.setSubmitted(!props.submitted);\n        },\n        className: props.submitted ? 'hidden' : 'bidding__submit',\n        children: \"\\u2713\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-inputs\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: !props.active ? 'btn btn__draw btn__draw-option' : 'btn btn__draw',\n        onClick: async () => {\n          if (props.currentBid > 0) {\n            let res = await GetCard(props.deckID);\n            let code = await res.data.cards[0].code;\n            let val = await CheckValue(res.data.cards[0].value, props.playerValue);\n            props.setPlayerHand([...props.playerHand, code]);\n            props.setPlayerValue(props.playerValue + val);\n            let check = await CheckPlayer(props.playerValue);\n\n            if (!check) {\n              setTimeout(() => {\n                onNewGame();\n              }, 1000);\n            }\n          } else {\n            alert('PLEASE MAKE A VALID BET');\n          }\n        },\n        children: \"Draw\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onNewGame(),\n        className: props.active ? 'btn__new btn__new-option' : 'btn__new',\n        children: \"Next Round?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: !props.active ? 'btn btn__end btn__end-option' : 'btn btn__end',\n        onClick: () => {\n          if (!props.submitted) {\n            alert('Please make a valid Bet');\n          } else {\n            if (props.playerValue < 22) {\n              props.setActive(!props.active);\n              dealerTurn();\n            } else {\n              onNewGame();\n            }\n          }\n        },\n        children: \"End\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"deck\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"deck__img\",\n        src: require('../../img/deck.jpg'),\n        alt: \"deck\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player__value\",\n      children: props.playerValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Playfield;\nexport default Playfield;\n\nvar _c;\n\n$RefreshReg$(_c, \"Playfield\");","map":{"version":3,"sources":["C:/Personal Projects/react-blackjack-hooks/src/components/playfield/playfield.jsx"],"names":["React","GetCard","CheckValue","CheckVictor","CheckPlayer","Playfield","props","onNewGame","bank","firstName","window","location","href","alert","setDealerValue","setDealerHand","setPlayerValue","setPlayerHand","setBid","setCurrentBid","setActive","setSubmitted","dealerDraw","res","deckID","code","data","cards","val","value","dealerValue","dealerHand","dealerTurn","playerValue","setTimeout","winner","setBank","currentBid","e","target","submitted","bid","active","playerHand","check","require"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nimport GetCard from '../../helper/getCard';\r\nimport CheckValue from '../../helper/checkValue';\r\nimport CheckVictor from '../../helper/checkVictor';\r\nimport CheckPlayer from '../../helper/checkPlayer';\r\n\r\nimport './playfield.scss';\r\n\r\nconst Playfield = (props) => {\r\n  const onNewGame = () => {\r\n    if (props.bank < 1 && props.firstName !== 'josh') {\r\n      window.location.href = 'https://www.youtube.com/watch?v=dQw4w9WgXcQ';\r\n    }\r\n    if (props.bank < 1 && props.firstName === 'josh') {\r\n      alert('Game Over!');\r\n    }\r\n    props.setDealerValue(0);\r\n    props.setDealerHand([]);\r\n    props.setPlayerValue(0);\r\n    props.setPlayerHand([]);\r\n    props.setBid(0);\r\n    props.setCurrentBid(0);\r\n    props.setActive(true);\r\n    props.setSubmitted(false);\r\n  };\r\n\r\n  const dealerDraw = async () => {\r\n    let res = await GetCard(props.deckID);\r\n    let code = await res.data.cards[0].code;\r\n    let val = await CheckValue(res.data.cards[0].value, props.dealerValue);\r\n    props.setDealerHand([...props.dealerHand, code]);\r\n    props.setDealerValue(props.dealerValue + val);\r\n  };\r\n\r\n  const dealerTurn = async () => {\r\n    if (props.playerValue > 21) {\r\n      CheckVictor(props.playerValue, props.dealerValue);\r\n    }\r\n    if (props.playerValue > props.dealerValue) {\r\n      dealerDraw();\r\n      setTimeout(() => {\r\n        if (props.dealerValue > props.playerValue) {\r\n          let winner = CheckVictor(props.playerValue, props.dealerValue);\r\n          if (winner === 'player') {\r\n            props.setBank(props.bank + 2 * props.currentBid);\r\n          }\r\n        }\r\n        dealerTurn();\r\n      }, 1000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='playfield'>\r\n      <div className='dealer__value'>{props.dealerValue}</div>\r\n      <div className='bidding'>\r\n        <div className='bidding__bank'>BANK: {props.bank}</div>\r\n        <input\r\n          onChange={(e) => {\r\n            if (props.bank - e.target.value >= 0 && e.target.value > 0) {\r\n              props.setBid(e.target.value);\r\n            }\r\n          }}\r\n          className={props.submitted ? 'hidden' : 'bidding__input'}\r\n          type='number'\r\n          value={props.bid}\r\n          min='0'\r\n          max={props.bank}\r\n        />\r\n        <div\r\n          onClick={async () => {\r\n            props.setCurrentBid(props.bid);\r\n            props.setBank(props.bank - props.bid);\r\n            dealerDraw();\r\n            props.setSubmitted(!props.submitted);\r\n          }}\r\n          className={props.submitted ? 'hidden' : 'bidding__submit'}\r\n        >\r\n          &#10003;\r\n        </div>\r\n      </div>\r\n      <div className='user-inputs'>\r\n        <button\r\n          className={\r\n            !props.active ? 'btn btn__draw btn__draw-option' : 'btn btn__draw'\r\n          }\r\n          onClick={async () => {\r\n            if (props.currentBid > 0) {\r\n              let res = await GetCard(props.deckID);\r\n              let code = await res.data.cards[0].code;\r\n              let val = await CheckValue(\r\n                res.data.cards[0].value,\r\n                props.playerValue\r\n              );\r\n              props.setPlayerHand([...props.playerHand, code]);\r\n              props.setPlayerValue(props.playerValue + val);\r\n              let check = await CheckPlayer(props.playerValue);\r\n              if (!check) {\r\n                setTimeout(() => {\r\n                  onNewGame();\r\n                }, 1000);\r\n              }\r\n            } else {\r\n              alert('PLEASE MAKE A VALID BET');\r\n            }\r\n          }}\r\n        >\r\n          Draw\r\n        </button>\r\n        <button\r\n          onClick={() => onNewGame()}\r\n          className={props.active ? 'btn__new btn__new-option' : 'btn__new'}\r\n        >\r\n          Next Round?\r\n        </button>\r\n        <button\r\n          className={\r\n            !props.active ? 'btn btn__end btn__end-option' : 'btn btn__end'\r\n          }\r\n          onClick={() => {\r\n            if (!props.submitted) {\r\n              alert('Please make a valid Bet');\r\n            } else {\r\n              if (props.playerValue < 22) {\r\n                props.setActive(!props.active);\r\n                dealerTurn();\r\n              } else {\r\n                onNewGame();\r\n              }\r\n            }\r\n          }}\r\n        >\r\n          End\r\n        </button>\r\n      </div>\r\n      <div className='deck'>\r\n        <img\r\n          className='deck__img'\r\n          src={require('../../img/deck.jpg')}\r\n          alt='deck'\r\n        />\r\n      </div>\r\n      <div className='player__value'>{props.playerValue}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Playfield;\r\n"]},"metadata":{},"sourceType":"module"}
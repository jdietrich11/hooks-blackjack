{"ast":null,"code":"var _jsxFileName = \"C:\\\\Personal Projects\\\\react-blackjack-hooks\\\\src\\\\components\\\\playfield\\\\playfield.jsx\";\nimport React from 'react';\nimport GetCard from '../../helper/getCard';\nimport CheckValue from '../../helper/checkValue';\nimport CheckVictor from '../../helper/checkVictor';\nimport './playfield.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Playfield = props => {\n  const onNewGame = () => {\n    props.setDealerValue(0);\n    props.setDealerHand([]);\n    props.setPlayerValue(0);\n    props.setPlayerHand([]);\n    props.setBid(0);\n    props.setCurrentBid(0);\n    props.setActive(true);\n    props.setSubmitted(false);\n  };\n\n  const dealerDraw = async () => {\n    let res = await GetCard(props.deckID);\n    let code = await res.data.cards[0].code;\n    let val = await CheckValue(res.data.cards[0].value, props.dealerValue);\n    props.setDealerHand([...props.dealerHand, code]);\n    props.setDealerValue(props.dealerValue + val);\n  };\n\n  const dealerTurn = () => {\n    if (props.playerValue >= props.dealerValue) {\n      dealerDraw();\n      setTimeout(() => {\n        if (props.dealerValue > props.playerValue) {\n          let winner = CheckVictor(props.playerValue, props.dealerValue);\n\n          if (winner === 'player') {}\n        }\n      }, 1000);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"playfield\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dealer__value\",\n      children: props.dealerValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bidding\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bidding__bank\",\n        children: [\"BANK: \", props.bank]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => {\n          if (props.bank - e.target.value >= 0 && e.target.value > 0) {\n            props.setBid(e.target.value);\n          }\n        },\n        className: props.submitted ? 'hidden' : 'bidding__input',\n        type: \"number\",\n        value: props.bid,\n        min: \"0\",\n        max: props.bank\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: async () => {\n          props.setCurrentBid(props.bid);\n          props.setBank(props.bank - props.bid);\n          dealerDraw();\n          props.setSubmitted(!props.submitted);\n        },\n        className: props.submitted ? 'hidden' : 'bidding__submit',\n        children: \"\\u2713\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-inputs\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: !props.active ? 'btn btn__draw btn__draw-option' : 'btn btn__draw',\n        onClick: async () => {\n          let res = await GetCard(props.deckID);\n          let code = await res.data.cards[0].code;\n          let val = await CheckValue(res.data.cards[0].value, props.playerValue);\n          props.setPlayerHand([...props.playerHand, code]);\n          props.setPlayerValue(props.playerValue + val);\n        },\n        children: \"Draw\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: props.active ? 'btn__new btn__new-option' : 'btn__new',\n        children: \"Next Round?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: !props.active ? 'btn btn__end btn__end-option' : 'btn btn__end',\n        onClick: () => {\n          if (!props.submitted) {\n            alert('Please make a valid Bet');\n          } else {\n            if (props.playerValue < 22) {\n              props.setActive(!props.active);\n              dealerTurn();\n            } else {\n              onNewGame();\n            }\n          }\n        },\n        children: \"End\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"deck\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"deck__img\",\n        src: require('../../img/deck.jpg'),\n        alt: \"deck\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player__value\",\n      children: props.playerValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Playfield;\nexport default Playfield;\n\nvar _c;\n\n$RefreshReg$(_c, \"Playfield\");","map":{"version":3,"sources":["C:/Personal Projects/react-blackjack-hooks/src/components/playfield/playfield.jsx"],"names":["React","GetCard","CheckValue","CheckVictor","Playfield","props","onNewGame","setDealerValue","setDealerHand","setPlayerValue","setPlayerHand","setBid","setCurrentBid","setActive","setSubmitted","dealerDraw","res","deckID","code","data","cards","val","value","dealerValue","dealerHand","dealerTurn","playerValue","setTimeout","winner","bank","e","target","submitted","bid","setBank","active","playerHand","alert","require"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nimport GetCard from '../../helper/getCard';\r\nimport CheckValue from '../../helper/checkValue';\r\nimport CheckVictor from '../../helper/checkVictor';\r\n\r\nimport './playfield.scss';\r\n\r\nconst Playfield = (props) => {\r\n  const onNewGame = () => {\r\n    props.setDealerValue(0);\r\n    props.setDealerHand([]);\r\n    props.setPlayerValue(0);\r\n    props.setPlayerHand([]);\r\n    props.setBid(0);\r\n    props.setCurrentBid(0);\r\n    props.setActive(true);\r\n    props.setSubmitted(false);\r\n  };\r\n\r\n  const dealerDraw = async () => {\r\n    let res = await GetCard(props.deckID);\r\n    let code = await res.data.cards[0].code;\r\n    let val = await CheckValue(res.data.cards[0].value, props.dealerValue);\r\n    props.setDealerHand([...props.dealerHand, code]);\r\n    props.setDealerValue(props.dealerValue + val);\r\n  };\r\n\r\n  const dealerTurn = () => {\r\n    if (props.playerValue >= props.dealerValue) {\r\n      dealerDraw();\r\n      setTimeout(() => {\r\n        if (props.dealerValue > props.playerValue) {\r\n          let winner = CheckVictor(props.playerValue, props.dealerValue);\r\n          if (winner === 'player') {\r\n          }\r\n        }\r\n      }, 1000);\r\n    }\r\n  };\r\n  return (\r\n    <div className='playfield'>\r\n      <div className='dealer__value'>{props.dealerValue}</div>\r\n      <div className='bidding'>\r\n        <div className='bidding__bank'>BANK: {props.bank}</div>\r\n        <input\r\n          onChange={(e) => {\r\n            if (props.bank - e.target.value >= 0 && e.target.value > 0) {\r\n              props.setBid(e.target.value);\r\n            }\r\n          }}\r\n          className={props.submitted ? 'hidden' : 'bidding__input'}\r\n          type='number'\r\n          value={props.bid}\r\n          min='0'\r\n          max={props.bank}\r\n        />\r\n        <div\r\n          onClick={async () => {\r\n            props.setCurrentBid(props.bid);\r\n            props.setBank(props.bank - props.bid);\r\n            dealerDraw();\r\n            props.setSubmitted(!props.submitted);\r\n          }}\r\n          className={props.submitted ? 'hidden' : 'bidding__submit'}\r\n        >\r\n          &#10003;\r\n        </div>\r\n      </div>\r\n      <div className='user-inputs'>\r\n        <button\r\n          className={\r\n            !props.active ? 'btn btn__draw btn__draw-option' : 'btn btn__draw'\r\n          }\r\n          onClick={async () => {\r\n            let res = await GetCard(props.deckID);\r\n            let code = await res.data.cards[0].code;\r\n            let val = await CheckValue(\r\n              res.data.cards[0].value,\r\n              props.playerValue\r\n            );\r\n            props.setPlayerHand([...props.playerHand, code]);\r\n            props.setPlayerValue(props.playerValue + val);\r\n          }}\r\n        >\r\n          Draw\r\n        </button>\r\n        <button\r\n          className={props.active ? 'btn__new btn__new-option' : 'btn__new'}\r\n        >\r\n          Next Round?\r\n        </button>\r\n        <button\r\n          className={\r\n            !props.active ? 'btn btn__end btn__end-option' : 'btn btn__end'\r\n          }\r\n          onClick={() => {\r\n            if (!props.submitted) {\r\n              alert('Please make a valid Bet');\r\n            } else {\r\n              if (props.playerValue < 22) {\r\n                props.setActive(!props.active);\r\n                dealerTurn();\r\n              } else {\r\n                onNewGame();\r\n              }\r\n            }\r\n          }}\r\n        >\r\n          End\r\n        </button>\r\n      </div>\r\n      <div className='deck'>\r\n        <img\r\n          className='deck__img'\r\n          src={require('../../img/deck.jpg')}\r\n          alt='deck'\r\n        />\r\n      </div>\r\n      <div className='player__value'>{props.playerValue}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Playfield;\r\n"]},"metadata":{},"sourceType":"module"}
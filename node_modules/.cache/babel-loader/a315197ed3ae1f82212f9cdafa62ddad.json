{"ast":null,"code":"var _jsxFileName = \"C:\\\\Personal Projects\\\\react-blackjack-hooks\\\\src\\\\components\\\\app\\\\app.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Overlay from '../overlay/overlay';\nimport Header from '../header/header';\nimport DealerHand from '../dealerHand/dealerHand';\nimport Playfield from '../playfield/playfield';\nimport Player from '../playerHand/playerHand';\nimport './app.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [formSubmitted, setFormSubmitted] = useState(false);\n  const [firstName, setFirstName] = useState('');\n  const [dealerHand, setDealerHand] = useState([]);\n  const [playerHand, setPlayerHand] = useState([]);\n  const [deckID, setDeckID] = useState('');\n  const [dealerValue, setDealerValue] = useState(0);\n  const [playerValue, setPlayerValue] = useState(0);\n  const [bank, setBank] = useState(100);\n  const [bid, setBid] = useState(0);\n  const [currentBid, setCurrentBid] = useState(0);\n  const [submitted, setSubmitted] = useState(false);\n  const [active, setActive] = useState(true);\n  useEffect(() => {\n    fetch('https://deckofcardsapi.com/api/deck/new/shuffle/?deck_count=14').then(res => res.json()).then(data => setDeckID(data.deck_id));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Overlay, {\n      name: firstName,\n      submitted: formSubmitted,\n      onChange2: e => setFormSubmitted(e),\n      onChange: e => setFirstName(e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DealerHand, {\n      value: dealerHand\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Playfield, {\n      dealerHand: dealerHand,\n      setDealerHand: setDealerHand,\n      playerHand: playerHand,\n      setPlayerHand: setPlayerHand,\n      deckID: deckID,\n      setDeckID: setDeckID,\n      dealerValue: dealerValue,\n      setDealerValue: setDealerValue,\n      playerValue: playerValue,\n      setPlayerValue: setPlayerValue,\n      bank: bank,\n      setBank: setBank,\n      bid: bid,\n      setBid: setBid,\n      currentBid: currentBid,\n      setCurrentBid: setCurrentBid,\n      submitted: submitted,\n      setSubmitted: setSubmitted,\n      active: active,\n      setActive: setActive\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Player, {\n      value: playerHand\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"APP\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"IpmZGUyTI5j76MzKttiKuAy9REo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Personal Projects/react-blackjack-hooks/src/components/app/app.jsx"],"names":["React","useEffect","useState","Overlay","Header","DealerHand","Playfield","Player","App","formSubmitted","setFormSubmitted","firstName","setFirstName","dealerHand","setDealerHand","playerHand","setPlayerHand","deckID","setDeckID","dealerValue","setDealerValue","playerValue","setPlayerValue","bank","setBank","bid","setBid","currentBid","setCurrentBid","submitted","setSubmitted","active","setActive","fetch","then","res","json","data","deck_id","e"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AAEA,OAAO,YAAP;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCR,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACW,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACa,UAAD,EAAaC,aAAb,IAA8Bd,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACe,MAAD,EAASC,SAAT,IAAsBhB,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACiB,WAAD,EAAcC,cAAd,IAAgClB,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAACmB,WAAD,EAAcC,cAAd,IAAgCpB,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAACqB,IAAD,EAAOC,OAAP,IAAkBtB,QAAQ,CAAC,GAAD,CAAhC;AACA,QAAM,CAACuB,GAAD,EAAMC,MAAN,IAAgBxB,QAAQ,CAAC,CAAD,CAA9B;AACA,QAAM,CAACyB,UAAD,EAAaC,aAAb,IAA8B1B,QAAQ,CAAC,CAAD,CAA5C;AACA,QAAM,CAAC2B,SAAD,EAAYC,YAAZ,IAA4B5B,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAAC6B,MAAD,EAASC,SAAT,IAAsB9B,QAAQ,CAAC,IAAD,CAApC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdgC,IAAAA,KAAK,CAAC,gEAAD,CAAL,CACGC,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESG,IAAD,IAAUnB,SAAS,CAACmB,IAAI,CAACC,OAAN,CAF3B;AAGD,GAJQ,EAIN,EAJM,CAAT;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE,QAAC,OAAD;AACE,MAAA,IAAI,EAAE3B,SADR;AAEE,MAAA,SAAS,EAAEF,aAFb;AAGE,MAAA,SAAS,EAAG8B,CAAD,IAAO7B,gBAAgB,CAAC6B,CAAD,CAHpC;AAIE,MAAA,QAAQ,EAAGA,CAAD,IAAO3B,YAAY,CAAC2B,CAAD;AAJ/B;AAAA;AAAA;AAAA;AAAA,YADF,eAOE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAPF,eAQE,QAAC,UAAD;AAAY,MAAA,KAAK,EAAE1B;AAAnB;AAAA;AAAA;AAAA;AAAA,YARF,eASE,QAAC,SAAD;AACE,MAAA,UAAU,EAAEA,UADd;AAEE,MAAA,aAAa,EAAEC,aAFjB;AAGE,MAAA,UAAU,EAAEC,UAHd;AAIE,MAAA,aAAa,EAAEC,aAJjB;AAKE,MAAA,MAAM,EAAEC,MALV;AAME,MAAA,SAAS,EAAEC,SANb;AAOE,MAAA,WAAW,EAAEC,WAPf;AAQE,MAAA,cAAc,EAAEC,cARlB;AASE,MAAA,WAAW,EAAEC,WATf;AAUE,MAAA,cAAc,EAAEC,cAVlB;AAWE,MAAA,IAAI,EAAEC,IAXR;AAYE,MAAA,OAAO,EAAEC,OAZX;AAaE,MAAA,GAAG,EAAEC,GAbP;AAcE,MAAA,MAAM,EAAEC,MAdV;AAeE,MAAA,UAAU,EAAEC,UAfd;AAgBE,MAAA,aAAa,EAAEC,aAhBjB;AAiBE,MAAA,SAAS,EAAEC,SAjBb;AAkBE,MAAA,YAAY,EAAEC,YAlBhB;AAmBE,MAAA,MAAM,EAAEC,MAnBV;AAoBE,MAAA,SAAS,EAAEC;AApBb;AAAA;AAAA;AAAA;AAAA,YATF,eA+BE,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAEjB;AAAf;AAAA;AAAA;AAAA;AAAA,YA/BF,eAgCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAhCF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoCD,CAxDD;;GAAMP,G;;KAAAA,G;AA0DN,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nimport Overlay from '../overlay/overlay';\r\nimport Header from '../header/header';\r\nimport DealerHand from '../dealerHand/dealerHand';\r\nimport Playfield from '../playfield/playfield';\r\nimport Player from '../playerHand/playerHand';\r\n\r\nimport './app.scss';\r\n\r\nconst App = () => {\r\n  const [formSubmitted, setFormSubmitted] = useState(false);\r\n  const [firstName, setFirstName] = useState('');\r\n  const [dealerHand, setDealerHand] = useState([]);\r\n  const [playerHand, setPlayerHand] = useState([]);\r\n  const [deckID, setDeckID] = useState('');\r\n  const [dealerValue, setDealerValue] = useState(0);\r\n  const [playerValue, setPlayerValue] = useState(0);\r\n  const [bank, setBank] = useState(100);\r\n  const [bid, setBid] = useState(0);\r\n  const [currentBid, setCurrentBid] = useState(0);\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const [active, setActive] = useState(true);\r\n\r\n  useEffect(() => {\r\n    fetch('https://deckofcardsapi.com/api/deck/new/shuffle/?deck_count=14')\r\n      .then((res) => res.json())\r\n      .then((data) => setDeckID(data.deck_id));\r\n  }, []);\r\n\r\n  return (\r\n    <div className='app'>\r\n      <Overlay\r\n        name={firstName}\r\n        submitted={formSubmitted}\r\n        onChange2={(e) => setFormSubmitted(e)}\r\n        onChange={(e) => setFirstName(e)}\r\n      />\r\n      <Header />\r\n      <DealerHand value={dealerHand} />\r\n      <Playfield\r\n        dealerHand={dealerHand}\r\n        setDealerHand={setDealerHand}\r\n        playerHand={playerHand}\r\n        setPlayerHand={setPlayerHand}\r\n        deckID={deckID}\r\n        setDeckID={setDeckID}\r\n        dealerValue={dealerValue}\r\n        setDealerValue={setDealerValue}\r\n        playerValue={playerValue}\r\n        setPlayerValue={setPlayerValue}\r\n        bank={bank}\r\n        setBank={setBank}\r\n        bid={bid}\r\n        setBid={setBid}\r\n        currentBid={currentBid}\r\n        setCurrentBid={setCurrentBid}\r\n        submitted={submitted}\r\n        setSubmitted={setSubmitted}\r\n        active={active}\r\n        setActive={setActive}\r\n      />\r\n      <Player value={playerHand} />\r\n      <div>APP</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Personal Projects\\\\react-blackjack-hooks\\\\src\\\\components\\\\playfield\\\\playfield.jsx\";\nimport React from 'react';\nimport GetCard from '../../helper/getCard';\nimport CheckValue from '../../helper/checkValue';\nimport './playfield.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Playfield = props => {\n  const onNewGame = props => {\n    setDealerValue(0);\n    setDealerHand([]);\n    setPlayerValue(0);\n    setPlayerHand([]);\n    setBid(0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"playfield\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dealer__value\",\n      children: props.dealerValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bidding\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bidding__bank\",\n        children: [\"BANK: \", props.bank]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => {\n          if (props.bank - e.target.value >= 0 && e.target.value > 0) {\n            props.setBid(e.target.value);\n          }\n        },\n        className: props.submitted ? 'hidden' : 'bidding__input',\n        type: \"number\",\n        value: props.bid,\n        min: \"0\",\n        max: props.bank\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: async () => {\n          props.setCurrentBid(props.bid);\n          props.setBank(props.bank - props.bid);\n          let res = await GetCard(props.deckID);\n          let code = await res.data.cards[0].code;\n          let val = await CheckValue(res.data.cards[0].value, props.dealerValue);\n          props.setDealerHand([...props.dealerHand, code]);\n          props.setDealerValue(props.dealerValue + val);\n          props.setSubmitted(!props.submitted);\n        },\n        className: props.submitted ? 'hidden' : 'bidding__submit',\n        children: \"\\u2713\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-inputs\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: !props.active ? 'btn btn__draw btn__draw-option' : 'btn btn__draw',\n        onClick: async () => {\n          let res = await GetCard(props.deckID);\n          let code = await res.data.cards[0].code;\n          let val = await CheckValue(res.data.cards[0].value, props.playerValue);\n          props.setPlayerHand([...props.playerHand, code]);\n          props.setPlayerValue(props.playerValue + val);\n        },\n        children: \"Draw\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: props.active ? 'btn__new btn__new-option' : 'btn__new',\n        children: \"Next Round?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: !props.active ? 'btn btn__end btn__end-option' : 'btn btn__end',\n        onClick: () => {\n          if (!props.submitted) {\n            alert('Please make a valid Bet');\n          } else {\n            if (props.playerValue < 22) {\n              props.setActive(!props.active);\n            } else {\n              onNewGame();\n            }\n          }\n        },\n        children: \"End\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"deck\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"deck__img\",\n        src: require('../../img/deck.jpg'),\n        alt: \"deck\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player__value\",\n      children: props.playerValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Playfield;\nexport default Playfield;\n\nvar _c;\n\n$RefreshReg$(_c, \"Playfield\");","map":{"version":3,"sources":["C:/Personal Projects/react-blackjack-hooks/src/components/playfield/playfield.jsx"],"names":["React","GetCard","CheckValue","Playfield","props","onNewGame","setDealerValue","setDealerHand","setPlayerValue","setPlayerHand","setBid","dealerValue","bank","e","target","value","submitted","bid","setCurrentBid","setBank","res","deckID","code","data","cards","val","dealerHand","setSubmitted","active","playerValue","playerHand","alert","setActive","require"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AAEA,OAAO,kBAAP;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAC3B,QAAMC,SAAS,GAAID,KAAD,IAAW;AAC3BE,IAAAA,cAAc,CAAC,CAAD,CAAd;AACAC,IAAAA,aAAa,CAAC,EAAD,CAAb;AACAC,IAAAA,cAAc,CAAC,CAAD,CAAd;AACAC,IAAAA,aAAa,CAAC,EAAD,CAAb;AACAC,IAAAA,MAAM,CAAC,CAAD,CAAN;AACD,GAND;;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,gBAAgCN,KAAK,CAACO;AAAtC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,6BAAsCP,KAAK,CAACQ,IAA5C;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,QAAQ,EAAGC,CAAD,IAAO;AACf,cAAIT,KAAK,CAACQ,IAAN,GAAaC,CAAC,CAACC,MAAF,CAASC,KAAtB,IAA+B,CAA/B,IAAoCF,CAAC,CAACC,MAAF,CAASC,KAAT,GAAiB,CAAzD,EAA4D;AAC1DX,YAAAA,KAAK,CAACM,MAAN,CAAaG,CAAC,CAACC,MAAF,CAASC,KAAtB;AACD;AACF,SALH;AAME,QAAA,SAAS,EAAEX,KAAK,CAACY,SAAN,GAAkB,QAAlB,GAA6B,gBAN1C;AAOE,QAAA,IAAI,EAAC,QAPP;AAQE,QAAA,KAAK,EAAEZ,KAAK,CAACa,GARf;AASE,QAAA,GAAG,EAAC,GATN;AAUE,QAAA,GAAG,EAAEb,KAAK,CAACQ;AAVb;AAAA;AAAA;AAAA;AAAA,cAFF,eAcE;AACE,QAAA,OAAO,EAAE,YAAY;AACnBR,UAAAA,KAAK,CAACc,aAAN,CAAoBd,KAAK,CAACa,GAA1B;AACAb,UAAAA,KAAK,CAACe,OAAN,CAAcf,KAAK,CAACQ,IAAN,GAAaR,KAAK,CAACa,GAAjC;AACA,cAAIG,GAAG,GAAG,MAAMnB,OAAO,CAACG,KAAK,CAACiB,MAAP,CAAvB;AACA,cAAIC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,CAASC,KAAT,CAAe,CAAf,EAAkBF,IAAnC;AACA,cAAIG,GAAG,GAAG,MAAMvB,UAAU,CACxBkB,GAAG,CAACG,IAAJ,CAASC,KAAT,CAAe,CAAf,EAAkBT,KADM,EAExBX,KAAK,CAACO,WAFkB,CAA1B;AAIAP,UAAAA,KAAK,CAACG,aAAN,CAAoB,CAAC,GAAGH,KAAK,CAACsB,UAAV,EAAsBJ,IAAtB,CAApB;AACAlB,UAAAA,KAAK,CAACE,cAAN,CAAqBF,KAAK,CAACO,WAAN,GAAoBc,GAAzC;AACArB,UAAAA,KAAK,CAACuB,YAAN,CAAmB,CAACvB,KAAK,CAACY,SAA1B;AACD,SAbH;AAcE,QAAA,SAAS,EAAEZ,KAAK,CAACY,SAAN,GAAkB,QAAlB,GAA6B,iBAd1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAdF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAmCE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACE;AACE,QAAA,SAAS,EACP,CAACZ,KAAK,CAACwB,MAAP,GAAgB,gCAAhB,GAAmD,eAFvD;AAIE,QAAA,OAAO,EAAE,YAAY;AACnB,cAAIR,GAAG,GAAG,MAAMnB,OAAO,CAACG,KAAK,CAACiB,MAAP,CAAvB;AACA,cAAIC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,CAASC,KAAT,CAAe,CAAf,EAAkBF,IAAnC;AACA,cAAIG,GAAG,GAAG,MAAMvB,UAAU,CACxBkB,GAAG,CAACG,IAAJ,CAASC,KAAT,CAAe,CAAf,EAAkBT,KADM,EAExBX,KAAK,CAACyB,WAFkB,CAA1B;AAIAzB,UAAAA,KAAK,CAACK,aAAN,CAAoB,CAAC,GAAGL,KAAK,CAAC0B,UAAV,EAAsBR,IAAtB,CAApB;AACAlB,UAAAA,KAAK,CAACI,cAAN,CAAqBJ,KAAK,CAACyB,WAAN,GAAoBJ,GAAzC;AACD,SAbH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAkBE;AACE,QAAA,SAAS,EAAErB,KAAK,CAACwB,MAAN,GAAe,0BAAf,GAA4C,UADzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAlBF,eAuBE;AACE,QAAA,SAAS,EACP,CAACxB,KAAK,CAACwB,MAAP,GAAgB,8BAAhB,GAAiD,cAFrD;AAIE,QAAA,OAAO,EAAE,MAAM;AACb,cAAI,CAACxB,KAAK,CAACY,SAAX,EAAsB;AACpBe,YAAAA,KAAK,CAAC,yBAAD,CAAL;AACD,WAFD,MAEO;AACL,gBAAI3B,KAAK,CAACyB,WAAN,GAAoB,EAAxB,EAA4B;AAC1BzB,cAAAA,KAAK,CAAC4B,SAAN,CAAgB,CAAC5B,KAAK,CAACwB,MAAvB;AACD,aAFD,MAEO;AACLvB,cAAAA,SAAS;AACV;AACF;AACF,SAdH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAvBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAnCF,eA6EE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,6BACE;AACE,QAAA,SAAS,EAAC,WADZ;AAEE,QAAA,GAAG,EAAE4B,OAAO,CAAC,oBAAD,CAFd;AAGE,QAAA,GAAG,EAAC;AAHN;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YA7EF,eAoFE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,gBAAgC7B,KAAK,CAACyB;AAAtC;AAAA;AAAA;AAAA;AAAA,YApFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwFD,CAhGD;;KAAM1B,S;AAkGN,eAAeA,SAAf","sourcesContent":["import React from 'react';\r\n\r\nimport GetCard from '../../helper/getCard';\r\nimport CheckValue from '../../helper/checkValue';\r\n\r\nimport './playfield.scss';\r\n\r\nconst Playfield = (props) => {\r\n  const onNewGame = (props) => {\r\n    setDealerValue(0);\r\n    setDealerHand([]);\r\n    setPlayerValue(0);\r\n    setPlayerHand([]);\r\n    setBid(0);\r\n  };\r\n  return (\r\n    <div className='playfield'>\r\n      <div className='dealer__value'>{props.dealerValue}</div>\r\n      <div className='bidding'>\r\n        <div className='bidding__bank'>BANK: {props.bank}</div>\r\n        <input\r\n          onChange={(e) => {\r\n            if (props.bank - e.target.value >= 0 && e.target.value > 0) {\r\n              props.setBid(e.target.value);\r\n            }\r\n          }}\r\n          className={props.submitted ? 'hidden' : 'bidding__input'}\r\n          type='number'\r\n          value={props.bid}\r\n          min='0'\r\n          max={props.bank}\r\n        />\r\n        <div\r\n          onClick={async () => {\r\n            props.setCurrentBid(props.bid);\r\n            props.setBank(props.bank - props.bid);\r\n            let res = await GetCard(props.deckID);\r\n            let code = await res.data.cards[0].code;\r\n            let val = await CheckValue(\r\n              res.data.cards[0].value,\r\n              props.dealerValue\r\n            );\r\n            props.setDealerHand([...props.dealerHand, code]);\r\n            props.setDealerValue(props.dealerValue + val);\r\n            props.setSubmitted(!props.submitted);\r\n          }}\r\n          className={props.submitted ? 'hidden' : 'bidding__submit'}\r\n        >\r\n          &#10003;\r\n        </div>\r\n      </div>\r\n      <div className='user-inputs'>\r\n        <button\r\n          className={\r\n            !props.active ? 'btn btn__draw btn__draw-option' : 'btn btn__draw'\r\n          }\r\n          onClick={async () => {\r\n            let res = await GetCard(props.deckID);\r\n            let code = await res.data.cards[0].code;\r\n            let val = await CheckValue(\r\n              res.data.cards[0].value,\r\n              props.playerValue\r\n            );\r\n            props.setPlayerHand([...props.playerHand, code]);\r\n            props.setPlayerValue(props.playerValue + val);\r\n          }}\r\n        >\r\n          Draw\r\n        </button>\r\n        <button\r\n          className={props.active ? 'btn__new btn__new-option' : 'btn__new'}\r\n        >\r\n          Next Round?\r\n        </button>\r\n        <button\r\n          className={\r\n            !props.active ? 'btn btn__end btn__end-option' : 'btn btn__end'\r\n          }\r\n          onClick={() => {\r\n            if (!props.submitted) {\r\n              alert('Please make a valid Bet');\r\n            } else {\r\n              if (props.playerValue < 22) {\r\n                props.setActive(!props.active);\r\n              } else {\r\n                onNewGame();\r\n              }\r\n            }\r\n          }}\r\n        >\r\n          End\r\n        </button>\r\n      </div>\r\n      <div className='deck'>\r\n        <img\r\n          className='deck__img'\r\n          src={require('../../img/deck.jpg')}\r\n          alt='deck'\r\n        />\r\n      </div>\r\n      <div className='player__value'>{props.playerValue}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Playfield;\r\n"]},"metadata":{},"sourceType":"module"}